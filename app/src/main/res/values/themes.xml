<resources xmlns:tools="http://schemas.android.com/tools">
    <!-- Base application theme. -->
    <style name="Theme.Foodinfo" parent="Theme.AppCompat.DayNight.NoActionBar">
        <!-- Primary brand color. -->
        <item name="colorPrimary">@color/flatYellow</item>
        <item name="colorPrimaryVariant">@color/flatYellow</item>
        <item name="colorOnPrimary">@color/white</item>
        <!-- Secondary brand color. -->
        <item name="colorSecondary">@color/flatYellow</item>
        <item name="colorSecondaryVariant">@color/flatYellow</item>
        <item name="colorOnSecondary">@color/black</item>

        <item name="textColor">@color/flatBlack</item>
        <item name="buttonTextColor">@color/white</item>
        <item name="backgroundColor">@color/white</item>
        <item name="unselectedColor">@color/materialGray4</item>

        <item name="android:ambientShadowAlpha">0.03</item>
        <!--   그림자의 투명도     -->
        <item name="android:spotShadowAlpha">0.03</item>

        <!-- Status bar color. -->
        <item name="android:statusBarColor" tools:targetApi="l">?attr/backgroundColor</item>
        <item name="android:windowLightNavigationBar">true</item>
        <!--    스테이터스바의 아이콘색을 검정색으로 변경한다.    -->

        <!-- Customize your theme here. -->

        <item name="android:textViewStyle">@style/TextViewStyle</item>
        <!--    만들어준 스타일을 모든 textView 스타일에 적용한다.    -->

        <item name="android:buttonStyle">@style/ButtonStyle</item>
        <item name="editTextStyle">@style/EditTextStyle</item>


        <item name="Hello">@color/white</item>
    </style>

    <style name="TextViewStyle" parent="Widget.AppCompat.TextView">
<!--        <item name="android:textColor">@color/black</item>-->
        <!--    name에는 속성명, 값에는 속성 값을 적어준다.    -->

        <item name="android:textColor">?attr/textColor</item>
        <!--    ?attr을 앞에 붙여주면 themes 안에 있는 속성을 의미한다.    -->

        <item name="android:fontFamily">@font/font_light</item>

        <item name="android:includeFontPadding">true</item>
        <!--    폰트에 기본적으로 들어있는 패딩    -->
    </style>

    <style name="ButtonStyle" parent="Widget.AppCompat.Button">
        <item name="android:textColor">?attr/buttonTextColor</item>
        <item name="android:textSize">17sp</item> <!-- sp로 사용하면 사용자 설정으로 크기가 변경된다. -->
        <item name="android:background">@drawable/ic_square_round</item>

        <item name="backgroundTint">?attr/colorPrimary</item>
        <!--    배경을 염색 시킨다.    -->

        <item name="android:fontFamily">@font/font_bold</item>
        <item name="android:textAllCaps">false</item>
    </style>


    <style name="EditTextStyle" parent="Widget.AppCompat.EditText">
        <item name="android:textColor">?attr/textColor</item>
        <item name="android:background">@drawable/ic_square_round</item>
        <item name="android:textSize">16sp</item>
        <item name="elevation">4dp</item> <!-- 화면에서 얼마나 위에 떠있는지 -> 그림자가 적용된다.-->
        <item name="fontFamily">@font/font_regular</item>
        <item name="android:padding">18dp</item>
    </style>

    <style name="CustomSplashScreenTheme" parent="Theme.SplashScreen">
        <!--    스플레시 스크린의 스타일    -->
        <item name="windowSplashScreenBackground">@color/white</item> <!--    컬러 값을 그냥 넣어줘야 한다.    -->

        <item name="windowSplashScreenAnimatedIcon">@drawable/ic_launcher_foreground</item>
        <!--   스플레시 화면에서 보여줄 아이콘    -->

        <item name="postSplashScreenTheme">@style/Theme.Foodinfo</item> <!-- 스플레시 스크린 다음 화면의 테마 -->
    </style>

    <style name="TitleBarTextAppearance" parent="android:TextAppearance">
        <item name="android:fontFamily">@font/font_bold</item>
        <item name="android:textSize">20sp</item>
        <item name="android:textColor">?attr/textColor</item>
    </style>
</resources>